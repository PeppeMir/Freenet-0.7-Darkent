########################################################################################################
# PeerSim configuration file for the Hybrid (Event + Cycle-Driven) simulation of Freenet 0.7 Darknet   #
#																									   #
# author  Giuseppe Miraglia																			   #
# since   March 9, 2015  																			   #
#																									   #
########################################################################################################

### random seed ###
random.seed 1234567890

### max duration of the simulation ###
simulation.endtime 8000

### class that define the node prototype used in the simulation ###
network.node structure.FPeer

### initial size of the overlay network (set to 0 before DataSet parsing) ###
network.size 0

### messages minimum and maximum delays (in milliseconds) ###
MINDELAY 0
MAXDELAY 0

### Linkable protocol "lp" to manage the FPeer's neighborhood view ###
protocol.lp protocol.LinkableProtocol

### initializer that set up the overlay network parsing the given DataSet ###
init.ovinit control.OverlayInit
{
	## prefix "network.node" for manage the allocation of the FPeers in the overlay network ##
	FPeer_prefix network.node
	
	## the File System path of the Data Set to parse for creating the overlay network ##
	dataset_path ../datasets/FacebookDataset_Large.csv
	
	## the PID of the defined Linkable protocol ##
	linkable_pid lp
}

### initializer that performs some statistics on the overlay network created by "ovinit" initializer ###
init.statinit control.StatisticsInit
{
	## the PID of the defined Linkable protocol ##
	linkable_pid lp
	
	## the path of the Data Set on which performs statistics ##
	dataset_path ../datasets/FacebookDataset_Large.csv
	
	## the flag that specifies if the initializer must performs statistics on the parsed DataSet. Possible values are: ##
	## "null" 		, if no statistics must be computed; 
	## "degree" 	, if must be computed the degree of each FPeer of the overlay network;
	## "cc" 		, if must be computed the local clustering coefficient of each FPeer of the overlay network;
	## "diameter"	, if must be computed the diameter of the overlay network;
	## "avgpl"		, if must be computed the average path length of the overlay network
	overlayStatistic null
}

### initializer that executes the cycle based-side of protocol having PID "hp" in the event driven engine ###
init.zscheduler peersim.edsim.CDScheduler
{
	## PID of the protocol that contains the "nextCycle" method ##
	protocol hp
}

### define a control which shuffles the order with which the nextCycle() method will be executed for overlay's nodes ###
control.shf Shuffle
{
	## shuffling period ##
	step 5
}

### define the uniform transport protocol "urt" that delivers (RELIABLY) messages with a random delay 	###
### contained in the interval [mindelay, maxdelay], according to the uniform distribution. 				###
protocol.urt peersim.transport.UniformRandomTransport
{
	## minimum delay to send a message ##
	mindelay MINDELAY
	
	## maximum delay to send a message ##
	maxdelay MAXDELAY
}

### define the Hybrid Cycle-Driven & Event-Driven protocol that use "utr" as transport protocol ###
protocol.hp protocol.MessagesExchangerProtocol 
{
	## PID of the CD-ED protocol itself ##
	itself_pid hp
	
	## PID of the used Transport protocol ##
	transport_pid urt
	
	## PID of the used Linkable protocol ##
	linkable_pid lp
	
	## frequency, in units of time, of execution of the cycle-driven side of the protocol (execution starts from cycle 1) ##
	## N.B. this parameter will be read by the initializer implemented by the class peersim.edsim.CDScheduler ##
	step 15
	
	## Maximum Hops-To-Live value used to bound the Greedy Depth-First routing of the messages ##
	maxHTL 16
	
	## Maximum Hops-To-Live value used to bound the SWAP requests ##
	maxHTLswap 6
	
	## PUT replication factor for the replication of a key toward neighbors, after a successfully PUT ##
	replicationFactor 10
	
	## frequency, in units of time, that FPeers tries to perform SWAP operation ##
	swapFrequency 15
	
	## interval, in minutes, based on which the protocol decides that an HashMap's entry is to mark as "useless" ##
	uselessFactor 10
	
	## frequency, in units of time, based on which the protocol removes from HashMap the "useless" messages-entries ##
	cleanupFrequency 300
	
	## bias factor used to model the probability, of an FPeer, to send a GET request or a PUT request ##
	coinBiasing 0.68
	
	## specify if the prints are allowed or not during the simulation ##
	allowPrints false
}